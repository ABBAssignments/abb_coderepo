name: CI/CD Pipeline for AKS Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install TFLint
        run: |
          curl -LO https://github.com/terraform-linters/tflint/releases/latest/download/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/

      - name: Lint Terraform Files
        run: tflint

      - name: Format Terraform Files
        run: terraform fmt -check

  validate:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Validate Terraform Configuration
        run: terraform validate

  test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        run: sudo apt-get install -y golang

      - name: Run Tests
        run: go test -v ./path_to_your_test_files

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Post Deployment Verification
        run: kubectl get pods -n default

  clean_up:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
